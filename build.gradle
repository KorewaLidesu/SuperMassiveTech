buildscript {
    repositories {
        mavenCentral()
	jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url = "https://gregtech.overminddl1.com/" }
    }
    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:1.2-1.0.+") {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'maven-publish'


group = 'tterrag.supermassivetech'
archivesBaseName = "SuperMassiveTech"
version = "MC${minecraft_version}-${mod_version}-${System.getenv().BUILD_NUMBER}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = 'run'
	
	replace "@VERSION@", project.version
	replace "${toReplace}", "required-after:Forge@[${forgeDep_version},);required-after:endercore@[${endercore_version},);after:EnderIO;after:Waila@[${WAILA_version},);"
    replaceIn "ModProps.java"
}

repositories {
    maven { //Computercraft, NEI, chicken core and lib
	name = "GregTech maven"
	url = "https://gregtech.overminddl1.com/"
    }
    maven { // WAILA
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // CCC/NEI (for WAILA)
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven { // EnderIO & EnderCore
        name 'tterrag Repo'
        url "http://maven.tterrag.com"
    }
    maven { url = "https://minecraft.curseforge.com/api/maven" }
	    maven {
        url = "http://minecraft.curseforge.com/api/maven/"
    }
    ivy {
        url "https://google.com/404"
        ivyPattern("https://google.com/404") // Workaround for https://github.com/gradle/gradle/issues/4107
        artifactPattern("https://media.forgecdn.net/files/[organisation]/[module]/[revision].[ext]")
    }
}

dependencies {
    compile "com.enderio.core:EnderCore:${endercore_version}:dev"
    compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev@jar"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev@jar"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev@jar"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev@jar"
    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar
            artifact deobfJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        }
    }
}
